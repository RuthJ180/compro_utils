#!/usr/bin/env bash

set -o errexit
set -o pipefail
set -o nounset
# set -o xtrace

# Help info.
THIS="compro-ssh"
DESC="List ssh hosts, or add a new one."
USAGE="compro-ssh"
declare -A FLAGS
FLAGS=(
  [a]="Add a host entry"
  [h]="Get help info"
  [i]="Set the path to the private key to use (defaults to ~/.ssh/id_rsa)"
  [n]="Change the name (defaults to the present working directory)"
  [o]="Specify the hostname ahead of time"
  [p]="Specify a port"
  [u]="Specify the user ahead of time"
)

ADD=false
HOSTNAME=''
HOSTS=$(grep "^Host" ~/.ssh/config | cut -c6- | sort)
IDENTITYFILE="~/.ssh/id_rsa"
NAME=${PWD##*/}
PORT=false
SSHUSER=''

# Allow flag to override config.
while getopts "ahi:n:o:p:u:" OPTION
do
  case $OPTION in
    a)
      ADD=true
      ;;
    h)
      echo "### ${THIS}

${DESC}

#### Usage

  > ${USAGE}

#### Flags
"
      for i in "${!FLAGS[@]}"
      do
        echo "**$i** ${FLAGS[$i]}"
      done
      echo ""
      exit 0
      ;;
    i)
      IDENTITYFILE="$OPTARG"
      ;;
    n)
      NAME="$OPTARG"
      ;;
    o)
      HOSTNAME="$OPTARG"
      ;;
    p)
      PORT="$OPTARG"
      ;;
    u)
      SSHUSER="$OPTARG"
      ;;
  esac
done

if [ ${ADD} == true ] && ! [[ "${HOSTS}" =~ "${NAME}" ]]; then
  # Prompt for HostName if not provided
  if [ ${#HOSTNAME} == 0 ]; then
    read -p "Enter HostName (server address): " HOSTNAME \n
  fi
  
  # Prompt for SSH User if not provided
  if [ ${#SSHUSER} == 0 ]; then
    read -p "Enter User: " SSHUSER \n
  fi

  # Print new config to bottom of file.
  echo "" >> ~/.ssh/config
  echo "Host "${NAME} >> ~/.ssh/config
  echo "  HostName "${HOSTNAME} >> ~/.ssh/config
  echo "  User "${SSHUSER} >> ~/.ssh/config
  echo "  IdentityFile "${IDENTITYFILE} >> ~/.ssh/config
  # @TODO: Check that the port is conveyed properly.
  if [ ${PORT} ]; then
    echo "  Port "${PORT} >> ~/.ssh/config
  fi
else
  # Without the -a flag, just list the Hosts.
  echo "${HOSTS}"
fi

exit 0
